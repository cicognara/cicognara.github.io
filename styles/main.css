/*! normalize.css v3.0.3 | MIT License | github.com/necolas/normalize.css */html{font-family:sans-serif;-ms-text-size-adjust:100%;-webkit-text-size-adjust:100%}body{margin:0}article,aside,details,figcaption,figure,footer,header,main,menu,nav,section,summary{display:block}audio,canvas,progress,video{display:inline-block;vertical-align:baseline}audio:not([controls]){display:none;height:0}[hidden],template{display:none}a{background-color:transparent}a:active,a:hover{outline:0}abbr[title]{border-bottom:1px dotted}b,strong{font-weight:inherit;font-weight:bolder}dfn{font-style:italic}h1{font-size:2em;margin:.67em 0}mark{background-color:#ff0;color:#000}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sup{top:-.5em}sub{bottom:-.25em}img{border:0}svg:not(:root){overflow:hidden}figure{margin:1em 40px}hr{box-sizing:content-box;height:0;overflow:visible}pre{overflow:auto}code,kbd,pre,samp{font-family:monospace;font-size:1em}button,input,optgroup,select,textarea{color:inherit;font:inherit;margin:0}button{overflow:visible}button,select{text-transform:none}button,html input[type=button],input[type=reset],input[type=submit]{-webkit-appearance:button;cursor:pointer}button[disabled],html input[disabled]{cursor:default}button::-moz-focus-inner,input::-moz-focus-inner{border:0;padding:0}*,:after,:before{box-sizing:border-box}.wrap{padding:1rem;width:100%}@media (min-width:1150px){.wrap{max-width:600px;margin-left:auto;margin-right:auto}.wrap:after{content:" ";display:block;clear:both}}h1{font:36px Playfair Display,Georgia,serif;font-weight:700;letter-spacing:.06em;margin:0;padding:.5em;text-align:center;text-transform:uppercase}@media (min-width:600px){h1{padding:0;font-size:25px}}@media (min-width:800px){h1{font-size:32px}}@media (min-width:1024px){h1{font-size:42px}}@media (min-width:1150px){h1{font-size:51px}}h1 .small{color:#221e1d;font-size:14px;font-weight:400}@media (min-width:600px){h1 .small{font-size:12px}}@media (min-width:800px){h1 .small{font-size:15px}}@media (min-width:1024px){h1 .small{font-size:20px}}@media (min-width:1150px){h1 .small{font-size:24px}}h2{font:30px Source Sans Pro,Helvetica,sans-serif;font-weight:700}h2,p{margin:1.5em auto}p{color:#221e1d;font:18px Cardo,Georgia,serif;line-height:1.5em}a{color:#672418;text-decoration:none;text-shadow:1px 1px 0 #fff,-1px 1px 0 #fff,2px 0 0 #fff,-2px 0 0 #fff;box-shadow:inset 0 -1px 0 0 #fff,inset 0 -3px 0 0 #d4b1aa}a:hover{box-shadow:inset 0 -1px 0 0 #fff,inset 0 -3px 0 0 #672418;transition:box-shadow 1s ease-in}.columns{-webkit-column-width:300px;-moz-column-width:300px;column-width:300px;-webkit-column-gap:2.5em;-moz-column-gap:2.5em;column-gap:2.5em;margin:2.5em auto 0;max-width:910px}.columns p:first-child{margin-top:0}.columns p{font-family:Cardo,Georgia,serif;font-size:16px;page-break-inside:avoid;-webkit-column-break-inside:avoid;break-inside:avoid}body{opacity:0}body.loaded{opacity:1;transition:opacity 2s ease-in}.intro{background:#e6e8db;background:linear-gradient(180deg,#e6e8db,#fff);display:block;height:100vh}.intro,.intro.scrolled{bottom:0;top:0;position:fixed}.intro.scrolled{left:0;width:100%}.intro .wrap{position:absolute;top:50%;left:50%;-webkit-transform:translate(-50%,-50%);transform:translate(-50%,-50%);padding:30px;max-width:calc(100% - 100px);width:100%;height:calc(100% - 100px)}@media (min-width:600px){.intro .wrap{border:8px solid #221e1d}}.intro .wrap .center{position:absolute;top:50%;left:50%;-webkit-transform:translate(-50%,-50%);transform:translate(-50%,-50%);width:100%}.intro .wrap:after,.intro .wrap:before{top:100%;left:50%;border:solid #e6e8db;content:" ";height:0;width:0;position:absolute;pointer-events:none}.intro .wrap:after{border-color:transparent;border-top-color:#fff;border-width:15px;margin-left:-15px}.intro .wrap:before{border-color:rgba(194,225,245,0);border-top-color:#221e1d;border-width:26px;margin-left:-26px}.intro .small{display:block}.intro .italic{font-style:italic;letter-spacing:0;text-transform:none}.blank{min-height:100vh}@media (min-width:600px){.contact .wrap{width:600px;margin:0 auto}}form{margin-bottom:50px}input,select,textarea{display:block;color:#221e1d;background-color:#fff;padding:1em;margin-bottom:1em;width:100%;border:3px solid #fff}input:focus,select:focus,textarea:focus{background:#fff;box-shadow:0;border:3px solid #adab9d;color:#221e1d;outline:none;padding:1em;transition:border .5s ease-in}input[type=submit],select[type=submit],textarea[type=submit]{background:#adab9d;font-weight:900;text-transform:uppercase;border-color:#adab9d}input[type=submit]:hover,select[type=submit]:hover,textarea[type=submit]:hover{background:#fff;transition:background 1s ease-in}textarea{resize:vertical;min-height:200px}body{padding-top:50px}header{background:#e6e8db;height:50px;position:fixed;z-index:1;top:0;transition:top .2s ease-in-out;width:100%;text-align:center}header ul{padding:0;margin:0;display:inline-block}header ul li{display:inline-block;float:left;padding:1em}header a{text-transform:uppercase;font:36px Playfair Display,Georgia,serif;font-size:15px;text-shadow:none;color:#221e1d}header a,header a:hover{box-shadow:none}.nav-up{top:-50px}.nav-down{top:0}figure{margin:0}figure.right{clear:both;margin:0}@media (min-width:600px){figure.right{float:right}}@media (min-width:1024px){figure.right{margin-right:-200px}}figure.left{clear:both;margin:0}@media (min-width:600px){figure.left{float:left}}@media (min-width:1024px){figure.left{margin-left:-200px}}figure figcaption{font-family:Cardo,Georgia,serif;font-size:.75rem;line-height:1rem;padding:.5em 1.9em .55em;width:350px}img{display:block;margin:0 auto;position:relative;width:350px}@media (min-width:600px){img{display:inline-block;margin:.5em 1.5em}}.partners{text-align:center}.partners .wrap{text-align:left}.partners ul{list-style:none;display:inline-block;padding:0}.partners ul li{vertical-align:middle;float:left;padding:1rem}@media (min-width:600px){.partners ul li{padding:.3rem;display:inline;float:none}}.partners ul li a,.partners ul li a:hover{box-shadow:none}.partners ul li img{width:auto;max-height:60px;-webkit-filter:grayscale(100%);filter:grayscale(100%)}.partners ul li img:hover{-webkit-filter:none;filter:none;transition:-webkit-filter .4s ease-in-out;transition:filter .4s ease-in-out;transition:filter .4s ease-in-out, -webkit-filter .4s ease-in-out}section{width:100%;display:inline-block;position:relative}section.about,section.partners,section.what,section.why{background:#fff}section.contact{background:#221e1d}.contact,.contact p{color:#fff}.alert{width:100%;position:absolute;top:105px;margin:0 auto;padding:25px 15px;text-align:left;opacity:0;-ms-filter:"progid:DXImageTransform.Microsoft.Alpha(Opacity=0)";filter:alpha(opacity=0);cursor:default;display:block;-webkit-animation:a 5s linear forwards;animation:a 5s linear forwards;background:#adab9d}@media (min-width:600px){.alert{width:600px;top:95px}}.alert p{font-weight:700;font-size:1.2rem;margin:0;padding:0 10px 0 60px;color:#221e1d}.alert p:before{text-align:center;border:3px solid #221e1d;margin-top:-17px;top:50%;left:20px;width:30px;content:'i';font-size:30px;color:#221e1d;position:absolute;height:30px;line-height:30px;border-radius:50%}@-webkit-keyframes a{0%{opacity:0}10%,90%{opacity:1}90%{-webkit-transform:translateY(0)}99%{-webkit-transform:translateY(-30px)}99%,to{opacity:0}}@keyframes a{0%{opacity:0}10%,90%{opacity:1}90%{-webkit-transform:translateY(0);transform:translateY(0)}99%{-webkit-transform:translateY(-30px);transform:translateY(-30px)}99%,to{opacity:0}}
/*# sourceMappingURL=data:application/json;base64, */
